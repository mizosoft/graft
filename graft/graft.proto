syntax = "proto3";

package graft;

option go_package = "github.com/mizosoft/graft/pb;pb";

service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc InstallSnapshot(SnapshotRequest) returns (SnapshotResponse);
}

message RequestVoteRequest {
  int64 term = 1;
  string candidateId = 2;
  int64 lastLogIndex = 3;
  int64 lastLogTerm = 4;
}

message RequestVoteResponse {
  int64 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesRequest {
  int64 term = 1;
  string leaderId = 2;
  int64 prevLogIndex = 3;
  int64 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int64 leaderCommitIndex = 6;
}

message AppendEntriesResponse {
  int64 term = 1;
  bool success = 2;
}

message SnapshotRequest {
  int64 term = 1;
  string leaderId = 2;
  SnapshotMetadata metadata = 3;
  int64 offset = 4;
  bytes data = 5;
  bool done = 6;
}

message SnapshotResponse {
  int64 term = 1;
}

message LogEntry {
  enum Type {
    COMMAND = 0;
    NOOP = 1;
    CONFIG = 2;
  }

  int64 term = 1;
  int64 index = 2;
  bytes data = 3;
  Type type = 4;
}

message PersistedState {
  int64 currentTerm = 1;
  string votedFor = 2;
  int64 commitIndex = 3;
}

message WalRecord {
  uint32 type = 1;
  uint32 crc32 = 3;
  bytes  data = 2;
}

message WalSegmentHeader {
  uint64 magic = 1;
  int32 version = 2;
  uint32 flags = 3;
  int32 segmentNumber = 4;
  int64 firstIndex = 5;
}

message SnapshotMetadata {
  int64 lastAppliedIndex = 1;
  int64 lastAppliedTerm = 2;
  optional ConfigUpdate configUpdate = 3;
}

message NodeConfig {
  string id = 1;
  string address = 2;
}

message ConfigUpdate {
  repeated NodeConfig old  = 1;
  repeated NodeConfig new = 2;
  Phase phase = 3;
  string id = 4;

  enum Phase {
    LEARNING = 0;
    JOINT = 1;
    APPLIED = 2;
  }
}
