// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: graft.proto

package graftpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigUpdate_Phase int32

const (
	ConfigUpdate_LEARNING ConfigUpdate_Phase = 0
	ConfigUpdate_JOINT    ConfigUpdate_Phase = 1
	ConfigUpdate_APPLIED  ConfigUpdate_Phase = 2
)

// Enum value maps for ConfigUpdate_Phase.
var (
	ConfigUpdate_Phase_name = map[int32]string{
		0: "LEARNING",
		1: "JOINT",
		2: "APPLIED",
	}
	ConfigUpdate_Phase_value = map[string]int32{
		"LEARNING": 0,
		"JOINT":    1,
		"APPLIED":  2,
	}
)

func (x ConfigUpdate_Phase) Enum() *ConfigUpdate_Phase {
	p := new(ConfigUpdate_Phase)
	*p = x
	return p
}

func (x ConfigUpdate_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigUpdate_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_graft_proto_enumTypes[0].Descriptor()
}

func (ConfigUpdate_Phase) Type() protoreflect.EnumType {
	return &file_graft_proto_enumTypes[0]
}

func (x ConfigUpdate_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigUpdate_Phase.Descriptor instead.
func (ConfigUpdate_Phase) EnumDescriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{5, 0}
}

type PersistedState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentTerm   int64                  `protobuf:"varint,1,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	VotedFor      string                 `protobuf:"bytes,2,opt,name=votedFor,proto3" json:"votedFor,omitempty"`
	CommitIndex   int64                  `protobuf:"varint,3,opt,name=commitIndex,proto3" json:"commitIndex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersistedState) Reset() {
	*x = PersistedState{}
	mi := &file_graft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersistedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistedState) ProtoMessage() {}

func (x *PersistedState) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistedState.ProtoReflect.Descriptor instead.
func (*PersistedState) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{0}
}

func (x *PersistedState) GetCurrentTerm() int64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *PersistedState) GetVotedFor() string {
	if x != nil {
		return x.VotedFor
	}
	return ""
}

func (x *PersistedState) GetCommitIndex() int64 {
	if x != nil {
		return x.CommitIndex
	}
	return 0
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          uint32                 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Crc32         uint32                 `protobuf:"varint,3,opt,name=crc32,proto3" json:"crc32,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_graft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{1}
}

func (x *Record) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Record) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

func (x *Record) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WalSegmentHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Magic         uint64                 `protobuf:"varint,1,opt,name=magic,proto3" json:"magic,omitempty"`
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Flags         uint32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	SegmentNumber int32                  `protobuf:"varint,4,opt,name=segmentNumber,proto3" json:"segmentNumber,omitempty"`
	FirstIndex    int64                  `protobuf:"varint,5,opt,name=firstIndex,proto3" json:"firstIndex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalSegmentHeader) Reset() {
	*x = WalSegmentHeader{}
	mi := &file_graft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalSegmentHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalSegmentHeader) ProtoMessage() {}

func (x *WalSegmentHeader) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalSegmentHeader.ProtoReflect.Descriptor instead.
func (*WalSegmentHeader) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{2}
}

func (x *WalSegmentHeader) GetMagic() uint64 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *WalSegmentHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WalSegmentHeader) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *WalSegmentHeader) GetSegmentNumber() int32 {
	if x != nil {
		return x.SegmentNumber
	}
	return 0
}

func (x *WalSegmentHeader) GetFirstIndex() int64 {
	if x != nil {
		return x.FirstIndex
	}
	return 0
}

type SnapshotMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	LastAppliedIndex int64                  `protobuf:"varint,1,opt,name=lastAppliedIndex,proto3" json:"lastAppliedIndex,omitempty"`
	LastAppliedTerm  int64                  `protobuf:"varint,2,opt,name=lastAppliedTerm,proto3" json:"lastAppliedTerm,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SnapshotMetadata) Reset() {
	*x = SnapshotMetadata{}
	mi := &file_graft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotMetadata) ProtoMessage() {}

func (x *SnapshotMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotMetadata.ProtoReflect.Descriptor instead.
func (*SnapshotMetadata) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotMetadata) GetLastAppliedIndex() int64 {
	if x != nil {
		return x.LastAppliedIndex
	}
	return 0
}

func (x *SnapshotMetadata) GetLastAppliedTerm() int64 {
	if x != nil {
		return x.LastAppliedTerm
	}
	return 0
}

type NodeConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeConfig) Reset() {
	*x = NodeConfig{}
	mi := &file_graft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfig) ProtoMessage() {}

func (x *NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfig.ProtoReflect.Descriptor instead.
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{4}
}

func (x *NodeConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ConfigUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Old           []*NodeConfig          `protobuf:"bytes,1,rep,name=old,proto3" json:"old,omitempty"`
	New           []*NodeConfig          `protobuf:"bytes,2,rep,name=new,proto3" json:"new,omitempty"`
	Phase         ConfigUpdate_Phase     `protobuf:"varint,3,opt,name=phase,proto3,enum=graft.ConfigUpdate_Phase" json:"phase,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_graft_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_graft_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_graft_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigUpdate) GetOld() []*NodeConfig {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *ConfigUpdate) GetNew() []*NodeConfig {
	if x != nil {
		return x.New
	}
	return nil
}

func (x *ConfigUpdate) GetPhase() ConfigUpdate_Phase {
	if x != nil {
		return x.Phase
	}
	return ConfigUpdate_LEARNING
}

func (x *ConfigUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_graft_proto protoreflect.FileDescriptor

const file_graft_proto_rawDesc = "" +
	"\n" +
	"\vgraft.proto\x12\x05graft\"p\n" +
	"\x0ePersistedState\x12 \n" +
	"\vcurrentTerm\x18\x01 \x01(\x03R\vcurrentTerm\x12\x1a\n" +
	"\bvotedFor\x18\x02 \x01(\tR\bvotedFor\x12 \n" +
	"\vcommitIndex\x18\x03 \x01(\x03R\vcommitIndex\"F\n" +
	"\x06Record\x12\x12\n" +
	"\x04type\x18\x01 \x01(\rR\x04type\x12\x14\n" +
	"\x05crc32\x18\x03 \x01(\rR\x05crc32\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\x9e\x01\n" +
	"\x10WalSegmentHeader\x12\x14\n" +
	"\x05magic\x18\x01 \x01(\x04R\x05magic\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\rR\x05flags\x12$\n" +
	"\rsegmentNumber\x18\x04 \x01(\x05R\rsegmentNumber\x12\x1e\n" +
	"\n" +
	"firstIndex\x18\x05 \x01(\x03R\n" +
	"firstIndex\"h\n" +
	"\x10SnapshotMetadata\x12*\n" +
	"\x10lastAppliedIndex\x18\x01 \x01(\x03R\x10lastAppliedIndex\x12(\n" +
	"\x0flastAppliedTerm\x18\x02 \x01(\x03R\x0flastAppliedTerm\"6\n" +
	"\n" +
	"NodeConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\xc8\x01\n" +
	"\fConfigUpdate\x12#\n" +
	"\x03old\x18\x01 \x03(\v2\x11.graft.NodeConfigR\x03old\x12#\n" +
	"\x03new\x18\x02 \x03(\v2\x11.graft.NodeConfigR\x03new\x12/\n" +
	"\x05phase\x18\x03 \x01(\x0e2\x19.graft.ConfigUpdate.PhaseR\x05phase\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\"-\n" +
	"\x05Phase\x12\f\n" +
	"\bLEARNING\x10\x00\x12\t\n" +
	"\x05JOINT\x10\x01\x12\v\n" +
	"\aAPPLIED\x10\x02B+Z)github.com/mizosoft/graft/graftpb;graftpbb\x06proto3"

var (
	file_graft_proto_rawDescOnce sync.Once
	file_graft_proto_rawDescData []byte
)

func file_graft_proto_rawDescGZIP() []byte {
	file_graft_proto_rawDescOnce.Do(func() {
		file_graft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_graft_proto_rawDesc), len(file_graft_proto_rawDesc)))
	})
	return file_graft_proto_rawDescData
}

var file_graft_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_graft_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_graft_proto_goTypes = []any{
	(ConfigUpdate_Phase)(0),  // 0: graft.ConfigUpdate.Phase
	(*PersistedState)(nil),   // 1: graft.PersistedState
	(*Record)(nil),           // 2: graft.Record
	(*WalSegmentHeader)(nil), // 3: graft.WalSegmentHeader
	(*SnapshotMetadata)(nil), // 4: graft.SnapshotMetadata
	(*NodeConfig)(nil),       // 5: graft.NodeConfig
	(*ConfigUpdate)(nil),     // 6: graft.ConfigUpdate
}
var file_graft_proto_depIdxs = []int32{
	5, // 0: graft.ConfigUpdate.old:type_name -> graft.NodeConfig
	5, // 1: graft.ConfigUpdate.new:type_name -> graft.NodeConfig
	0, // 2: graft.ConfigUpdate.phase:type_name -> graft.ConfigUpdate.Phase
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_graft_proto_init() }
func file_graft_proto_init() {
	if File_graft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_graft_proto_rawDesc), len(file_graft_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graft_proto_goTypes,
		DependencyIndexes: file_graft_proto_depIdxs,
		EnumInfos:         file_graft_proto_enumTypes,
		MessageInfos:      file_graft_proto_msgTypes,
	}.Build()
	File_graft_proto = out.File
	file_graft_proto_goTypes = nil
	file_graft_proto_depIdxs = nil
}
